[{"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/index.js":"1","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/reportWebVitals.js":"2","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/App.js":"3","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Header.js":"4","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Shop.js":"5","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/About.js":"6","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Sell.js":"7","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Login.js":"8","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Cart.js":"9","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Sort.js":"10","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/ProductList.js":"11","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Search.js":"12","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Filters.js":"13","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/SellerFilter.js":"14","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/SellerList.js":"15","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/CartCard.js":"16","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/ProductCard.js":"17","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/SellerCard.js":"18","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Data/states.js":"19"},{"size":592,"mtime":1628013653725,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1627941964222,"results":"22","hashOfConfig":"21"},{"size":6569,"mtime":1628206318919,"results":"23","hashOfConfig":"21"},{"size":1909,"mtime":1628206318920,"results":"24","hashOfConfig":"21"},{"size":1516,"mtime":1628206318923,"results":"25","hashOfConfig":"21"},{"size":597,"mtime":1628181041932,"results":"26","hashOfConfig":"21"},{"size":4009,"mtime":1628198554181,"results":"27","hashOfConfig":"21"},{"size":3916,"mtime":1628119150163,"results":"28","hashOfConfig":"21"},{"size":5154,"mtime":1628200066123,"results":"29","hashOfConfig":"21"},{"size":630,"mtime":1628094865031,"results":"30","hashOfConfig":"21"},{"size":631,"mtime":1628206318922,"results":"31","hashOfConfig":"21"},{"size":464,"mtime":1628039465677,"results":"32","hashOfConfig":"21"},{"size":1329,"mtime":1628178340228,"results":"33","hashOfConfig":"21"},{"size":825,"mtime":1628183284688,"results":"34","hashOfConfig":"21"},{"size":519,"mtime":1628181052653,"results":"35","hashOfConfig":"21"},{"size":1419,"mtime":1628103427769,"results":"36","hashOfConfig":"21"},{"size":1759,"mtime":1628206931846,"results":"37","hashOfConfig":"21"},{"size":1524,"mtime":1628182061269,"results":"38","hashOfConfig":"21"},{"size":394,"mtime":1628189478093,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1584ar2",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/index.js",[],["84","85"],"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/reportWebVitals.js",[],"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/App.js",["86","87","88","89","90"],"import { Route, Switch, useLocation } from 'react-router-dom'\nimport React, { useEffect, useState } from 'react'\nimport { Sticky } from 'semantic-ui-react'\nimport Header from './Header'\nimport Shop from './Shop'\nimport Sell from './Sell'\nimport About from './About'\nimport Cart from './Cart'\nimport Login from './Login'\nimport ProductCard from './ProductCard'\n\nfunction App() {\n  const [products, setProducts] = useState([])\n  const [filter, setFilter] = useState([])\n  const [search, setSearch] = useState('')\n  const [sort, setSort] = useState('')\n  const [cart, setCart] = useState([])\n  const [sellers, setSellers] = useState([])\n  const [currentUser, setCurrentUser] = useState(null)\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [sellerFilter, setSellerFilter] = useState('all')\n  const [likes, setLikes] = useState([])\n  const location = useLocation()\n\n  //array of only names of the sellers\n  const sellerNames = sellers.map(seller => seller.name)\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/products`)\n    .then(res => res.json())\n    .then(setProducts)\n  }, [])\n\n  useEffect(() => {\n    fetch(`https://api.tvmaze.com/shows/526/cast`)\n    .then(res => res.json())\n    .then(data => {\n       // console.log('external fetch done')\n        setSellers(data.map(item => item.character))\n    })\n  }, [])\n\n  useEffect(() => {\n    if (loggedIn) {\n      fetch(`http://localhost:3000/users/${currentUser.user.id}`)\n      .then(res => res.json())\n      .then(user => {\n        if ((user.cart !== undefined) && (cart.length === 0)) {\n          setCart(user.cart)\n        } else {\n          fetch(`http://localhost:3000/users/${currentUser.user.id}`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${currentUser.accessToken}`\n          },\n          body: JSON.stringify({\n            \"cart\": cart\n          })\n          })\n          .then(res => res.json())\n          .then(data => data)\n        }\n        if ((user.likes !== undefined)) {\n          setLikes(user.likes)\n          setProducts(products)\n        }\n      })\n    }\n  }, [loggedIn])\n\n  \n  useEffect(()=> {\n    if (sellerFilter !== 'all' && location.pathname !== '/'){\n      setSellerFilter('all')\n    }\n  }, [location])\n  \n\n  function addProduct(newProduct) {\n    setProducts([...products, newProduct])\n  }\n\n  function addToCart(id){\n    if (cart.includes(id)) setCart(cart)\n    else setCart([...cart, id])\n\n    if (loggedIn) {\n      const updateCart = [...cart, id]\n      fetch(`http://localhost:3000/users/${currentUser.user.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${currentUser.accessToken}`\n        },\n        body: JSON.stringify({\n          \"cart\": updateCart\n        })\n      })\n      .then(res => res.json())\n      .then(data => data)\n    }\n  }\n\n  function removeFromCart(id){\n    const updatedCart = cart.filter(item => item !== id)\n    setCart(updatedCart)\n\n    if (loggedIn) {\n      fetch(`http://localhost:3000/users/${currentUser.user.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${currentUser.accessToken}`\n        },\n        body: JSON.stringify({\n          \"cart\": updatedCart\n        })\n      })\n      .then(res => res.json())\n      .then(data => data)\n    }\n  }\n\n  function addLikes(id) {    \n    if (loggedIn) {\n      const updateLikes = [...likes, id]\n      fetch(`http://localhost:3000/users/${currentUser.user.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${currentUser.accessToken}`\n        },\n        body: JSON.stringify({\n          \"likes\": updateLikes\n        })\n      })\n      .then(res => res.json())\n      .then(() => setLikes([...likes, id]))\n    } else {\n      alert(\"Login to like an item.\")\n    }\n  }\n\n  function removeLikes(id) {\n    if (loggedIn) {\n      const updateLikes = likes.filter(item => item !== id)\n      fetch(`http://localhost:3000/users/${currentUser.user.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${currentUser.accessToken}`\n        },\n        body: JSON.stringify({\n          \"likes\": updateLikes\n        })\n      })\n      .then(res => res.json())\n      .then(() => setLikes(updateLikes))\n    }\n  }\n\n  const displayProducts = products.filter((eachProduct) => {\n    if (filter.length < 1) {\n      return eachProduct\n    } else {\n      return filter.includes(eachProduct.category)\n    }\n  }).filter((eachProduct) => {\n    if(sellerFilter !== 'all'){\n      return eachProduct.seller === sellerFilter\n    } else {return eachProduct}\n  }).filter((eachProduct) => {\n    if (search) {\n      return eachProduct.title.toLowerCase().includes(search.toLowerCase())\n    } else {\n      return eachProduct\n    }\n  }).sort((firstProduct, secondProduct) => {\n    if (sort === 'relevant') {\n      if (firstProduct.id > firstProduct.id) return -1\n    } else if (sort === 'priceHighLow') {\n      if (firstProduct.price > secondProduct.price) return -1\n    } else if (sort === 'priceLowHigh') {\n      if (firstProduct.price < secondProduct.price) return -1\n    }\n  })\n\n  //console.log(products)\n\n  return (\n    <div>\n      <Sticky>\n        <Header cart={cart} loggedIn={loggedIn} setCurrentUser={setCurrentUser} setLoggedIn={setLoggedIn} setCart={setCart} setLikes={setLikes} />\n      </Sticky>\n\n    <Switch>\n      <Route path=\"/sell\">\n        <Sell addProduct={addProduct} sellerNames={sellerNames} currentUser={currentUser}/>\n      </Route>\n      <Route path=\"/about\">\n        <About sellers={sellers} setSellerFilter={setSellerFilter} products={products}/>\n      </Route>\n      <Route path=\"/cart\">\n        <Cart cart={cart} products={products} removeFromCart={removeFromCart} setCart={setCart} currentUser={currentUser} />\n      </Route>\n      <Route path=\"/login\">\n        <Login setCurrentUser={setCurrentUser} setLoggedIn={setLoggedIn} />\n      </Route>\n      <Route exact path=\"/\">\n        <Shop products={displayProducts} setFilter={setFilter} filter={filter} search={search} setSearch={setSearch} addToCart={addToCart} removeFromCart={removeFromCart} setSort={setSort} cart={cart} sellerNames={sellerNames} setSellerFilter={setSellerFilter} sellerFilter={sellerFilter} addLikes={addLikes} likes={likes} removeLikes={removeLikes} />\n      </Route>\n    </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Header.js",[],"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Shop.js",[],"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/About.js",[],"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Sell.js",[],"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Login.js",[],"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Cart.js",["91","92","93"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useState } from 'react'\nimport CartCard from './CartCard'\nimport states from '../Data/states'\n\nconst paypalStyle = {\n    width: \"23px\"\n}\n\nconst googleStyle = {\n    width: \"28px\"\n}\n\nconst appleStyle = {\n    width: \"30px\"\n}\n\nconst hrStyle = {\n    width: \"50%\"\n}\n\nconst linkStyle = {\n    textDecoration: 'underline'\n}\n\nconst SalesTax = require(\"sales-tax\")\n\nfunction Cart({ cart, products, removeFromCart, setCart, currentUser }) {\n    SalesTax.setTaxOriginCountry(\"US\")\n\n    const [taxFilter, setTaxFilter] = useState('')\n    const [tax, setTax] = useState(0)\n\n    const filterProduct = products.filter((eachProduct) => {\n        return cart.includes(eachProduct.id)\n    })\n    \n    const displayProduct = filterProduct.map((eachFiltered) => {\n        return <CartCard key={eachFiltered.id} product={eachFiltered} removeFromCart={removeFromCart} />\n    })\n\n    const totalCost = Number.parseFloat(filterProduct.reduce((accum, product)=> {\n        return product.price + accum}, 0)).toFixed(2)\n\n    const taxTotal = Number.parseFloat(tax * totalCost).toFixed(2)\n    const totalWithTax = Number.parseFloat(+totalCost + +taxTotal).toFixed(2)\n    \n    function handleClick() {\n        if (cart.length > 0) {\n            if (currentUser !== null) {\n                if (taxFilter === '') {\n                    alert(\"Select your state.\")\n                } else {\n                    alert(\"Thank you for your purchase!\")\n    \n                    products.forEach((eachProduct) => {\n                        if (cart.includes(eachProduct.id)) {\n                            eachProduct.inStock = false\n        \n                            fetch(`http://localhost:3000/products/${eachProduct.id}`, {\n                                method: 'PATCH',\n                                headers: {\n                                    'Content-Type': 'application/json'\n                                },\n                                body: JSON.stringify({\n                                    'inStock': false\n                                })\n                            })\n                            .then(res => res.json())\n                            .then(() => {\n                                setCart([])\n                                fetch(`http://localhost:3000/users/${currentUser.user.id}`, {\n                                    method: 'PATCH',\n                                    headers: {\n                                      'Content-Type': 'application/json',\n                                      'Authorization': `Bearer ${currentUser.accessToken}`\n                                    },\n                                    body: JSON.stringify({\n                                      \"cart\": []\n                                    })\n                                  })\n                                  .then(res => res.json())\n                                  .then(data => data)\n                            })\n                        }\n                    })\n                }\n            } else {\n                alert(\"Login to complete your purchase.\")\n            }\n        }\n    }\n\n    const stateCodes = states.map((eachState) => {\n        return (\n            <option value={eachState} key={eachState}>{eachState}</option> \n        )\n    })\n\n    function handleChange(e) {\n        setTaxFilter(e.target.value)\n\n        SalesTax.getSalesTax(\"US\", `${e.target.value}`)\n        .then(tax => setTax(tax.rate))\n    }\n\n    const emptyCart = () => {\n        return (\n            <div>\n            <p>Your cart is empty</p>\n            <Link to='/' style={linkStyle}>Get back to shopping</Link>\n            </div>\n        )\n    }\n\n\nreturn (\n    <div className=\"ui center aligned container\">\n        <br></br>\n        <h2>Your Cart</h2>\n        <br></br>\n        <div className=\"ui one column center aligned grid\">\n            {(cart.length > 0) ? displayProduct : emptyCart()}\n        </div>\n        <br></br>\n        <div className=\"ui basic segment\">\n            <select \n                name=\"tax-filter\" \n                id=\"tax-filter\" \n                aria-label=\"tax filter\" \n                className=\"ui compact selection dropdown\"\n                onChange={handleChange}\n                value={taxFilter}\n            >\n                <option value=\"all\">State</option>\n                {stateCodes}\n            </select>\n\n            <h4>Tax ({tax*100}%):&nbsp;&nbsp;&nbsp;&nbsp; ${taxTotal}</h4>\n            <h3>Total:&nbsp;&nbsp;&nbsp;&nbsp; ${totalWithTax}</h3>\n        </div>\n        <hr style={hrStyle}></hr>\n        <h5>Express Checkout</h5>\n        <br></br>\n        <div className=\"ui one row center aligned grid\">\n            <button className=\"ui basic button\"><img src=\"./paypal.png\" onClick={handleClick} style={paypalStyle}/></button>\n            <button className=\"ui basic button\"><img src=\"./google.png\" onClick={handleClick} style={googleStyle}/></button>\n            <button className=\"ui basic button\"><img src=\"./apple.png\" onClick={handleClick} style={appleStyle}/></button>\n        </div>\n        \n    </div>\n)\n}\n\nexport default Cart","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Sort.js",[],"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/ProductList.js",[],"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Search.js",[],"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/Filters.js",["94"],"import React, { useState } from 'react'\n\nfunction Filters({ setFilter, filter, sideBarElementStyle }) {\n    //const [category, setCategory] = useState('')\n    const categories = [\n        \"Food\",\n        \"Home\",\n        \"Apparel\",\n        \"Entertainment\",\n        \"Miscellaneous\"\n    ]\n\n    const checkboxStyle ={\n        marginTop: '10px',\n        marginBottom: '10px',\n        marginRight: '90px',\n    }\n\n    const displayCategories = categories.map((eachCategory) => {\n        return (\n            <div style={checkboxStyle} className=\"ui checkbox\">\n            <input \n                type='checkbox'\n                name={eachCategory} \n                onChange={handleChange}    \n            />\n            <label key={eachCategory}>\n            {eachCategory}\n            </label>\n        </div>\n        )\n    })\n\n    function handleChange(e) {\n        if (e.target.checked) {\n            setFilter([...filter, e.target.name])\n        } else {\n            const newFilter = filter.filter((eachFilter) => eachFilter !== e.target.name)\n            setFilter(newFilter)\n        }\n    }\n\n    return (\n        <div style={sideBarElementStyle} className=\"ui vertical\">\n            <h4>Filter:</h4>\n            <p className=\"ui meta\">By Cateogry</p>\n            {displayCategories}\n        </div>\n    )\n}\n\nexport default Filters\n","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/SellerFilter.js",[],"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/SellerList.js",[],"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/CartCard.js",["95"],"function CartCard({ product, removeFromCart }) {\n    const { title, price, image, id } = product\n\n    function handleClick() {\n        removeFromCart(id)\n    }\n\n    const cardStyle = {\n       width: '40%',\n       padding: '10px'\n    }\n    const imgDiv = {\n        width: '20%',\n        float: 'left'\n    }\n\n    const imgStyle ={\n        overflow: 'hidden',\n        objectFit: 'cover',\n        height: '80px',\n        width: '80px',\n    }\n    const cardText = {\n       float: 'left',\n       width: '60%',\n       paddingTop: '7%',\n       textAlign: 'left',\n       paddingLeft: '5px'\n    }\n\n    const buttonCol = {\n        paddingTop: '5%'\n    }\n\n    const buttonStyle = {\n        width: '10%'\n    }\n\n    return (\n        <div className=\"row\">\n            <div style={cardStyle} className=\"ui raised segment\">\n                <div className=\"column\" style={imgDiv}>\n                    <img src={image} className=\"ui tiny image\" style={imgStyle}/>\n                </div>\n                <div className=\"column\" style={cardText}>\n                    <h5>{title} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ${price}</h5>\n                </div>\n                <div className=\"column\" style={buttonCol}>\n                    <button className=\"ui tiny button\"onClick={handleClick} style={buttonStyle}><i className=\"close icon\"></i></button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CartCard\n\n\n","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/ProductCard.js",["96","97","98","99","100"],"import React from 'react'\nimport { useState } from 'react'\n\nfunction ProductCard( { product, addToCart, removeFromCart, cart, addLikes, userLiked, removeLikes }) {\n\n    const { id, title, image, seller, price, category, comments, inCart, inStock } = product\n    const [isInCart, setIsInCart] = useState(false)\n    const [isLiked, setIsLiked] = useState(userLiked)\n\n//temporary CSS\n    const tempCardStyle = {\n        margin: '5px',\n        textAlign: 'center',\n        padding: '5px',\n        boxShadow: '0 1px 3px 0 #F4F7F5, 0 0 0 1px #F4F7F5',\n    }\n\n    const imgStyle = {\n        overflow: 'hidden',\n        objectFit: 'cover',\n        height: '140px',\n        width: '140px',\n    }\n\n    function handleCartToggle(){\n        (cart.includes(id))? removeFromCart(id) : addToCart(id)\n        setIsInCart(!isInCart)\n    }\n\n    function handleLike(){\n        if (userLiked) {\n            removeLikes(id)\n            setIsLiked(!userLiked)\n        } else {\n            addLikes(id)\n            setIsLiked(!userLiked)\n        }    \n    }\n\n    return (\n        <div className=\"ui card\" style={tempCardStyle}>\n            <i onClick={handleLike} className={userLiked? \"heart icon\" : \" heart outline icon\"}></i>\n            <img src={image} className=\"ui small centered image\" style={imgStyle}/>\n            <br></br>\n            <div >\n            <h3 className=\"ui header\">{title}</h3>\n            <h5 className=\"ui header\">{seller}</h5>\n            <h5 className=\"ui header\">${price}</h5> \n            <button disabled={inStock ? '' : \"disabled\"} className=\"ui button\" onClick={handleCartToggle}>{inStock ? ((cart.includes(id))? \"Remove from Cart\" : \"Add to Cart\") : \"Out of Stock\"}</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductCard\n","/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Components/SellerCard.js",[],"/Users/clairelogan/Development/Code/Phase2/Project/DunderList/src/Data/states.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":10,"column":8,"nodeType":"107","messageId":"108","endLine":10,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":70,"column":6,"nodeType":"111","endLine":70,"endColumn":16,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":77,"column":6,"nodeType":"111","endLine":77,"endColumn":16,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":179,"column":41,"nodeType":"117","messageId":"118","endLine":179,"endColumn":43},{"ruleId":"119","severity":1,"message":"120","line":181,"column":11,"nodeType":"121","messageId":"122","endLine":181,"endColumn":44},{"ruleId":"123","severity":1,"message":"124","line":147,"column":49,"nodeType":"125","endLine":147,"endColumn":116},{"ruleId":"123","severity":1,"message":"124","line":148,"column":49,"nodeType":"125","endLine":148,"endColumn":116},{"ruleId":"123","severity":1,"message":"124","line":149,"column":49,"nodeType":"125","endLine":149,"endColumn":114},{"ruleId":"105","severity":1,"message":"126","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":43,"column":21,"nodeType":"125","endLine":43,"endColumn":82},{"ruleId":"105","severity":1,"message":"127","line":6,"column":46,"nodeType":"107","messageId":"108","endLine":6,"endColumn":54},{"ruleId":"105","severity":1,"message":"128","line":6,"column":56,"nodeType":"107","messageId":"108","endLine":6,"endColumn":64},{"ruleId":"105","severity":1,"message":"129","line":6,"column":66,"nodeType":"107","messageId":"108","endLine":6,"endColumn":72},{"ruleId":"105","severity":1,"message":"130","line":8,"column":12,"nodeType":"107","messageId":"108","endLine":8,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":43,"column":13,"nodeType":"125","endLine":43,"endColumn":84},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'ProductCard' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cart', 'currentUser.accessToken', 'currentUser.user.id', and 'products'. Either include them or remove the dependency array. You can also do a functional update 'setProducts(p => ...)' if you only need 'products' in the 'setProducts' call.","ArrayExpression",["133"],"React Hook useEffect has a missing dependency: 'sellerFilter'. Either include it or remove the dependency array.",["134"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'category' is assigned a value but never used.","'comments' is assigned a value but never used.","'inCart' is assigned a value but never used.","'isLiked' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [cart, currentUser.accessToken, currentUser.user.id, loggedIn, products]",{"range":"139","text":"140"},"Update the dependencies array to be: [location, sellerFilter]",{"range":"141","text":"142"},[2139,2149],"[cart, currentUser.accessToken, currentUser.user.id, loggedIn, products]",[2276,2286],"[location, sellerFilter]"]